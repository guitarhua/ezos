   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_fsmc.c"
  15              		.section	.text.FSMC_NORSRAMDeInit,"ax",%progbits
  16              		.align	1
  17              		.global	FSMC_NORSRAMDeInit
  18              		.thumb
  19              		.thumb_func
  21              	FSMC_NORSRAMDeInit:
  22              		@ args = 0, pretend = 0, frame = 0
  23              		@ frame_needed = 0, uses_anonymous_args = 0
  24 0000 10B5     		push	{r4, lr}
  25 0002 0446     		mov	r4, r0
  26 0004 50B1     		cbz	r0, .L2
  27 0006 20F00403 		bic	r3, r0, #4
  28 000a 022B     		cmp	r3, #2
  29 000c 17D0     		beq	.L3
  30 000e 0428     		cmp	r0, #4
  31 0010 15D0     		beq	.L3
  32 0012 0E48     		ldr	r0, .L13
  33 0014 6921     		movs	r1, #105
  34 0016 FFF7FEFF 		bl	assert_err
  35 001a 10E0     		b	.L3
  36              	.L2:
  37 001c 43F2DB02 		movw	r2, #12507
  38 0020 4FF02043 		mov	r3, #-1610612736
  39 0024 1A60     		str	r2, [r3]
  40              	.L4:
  41 0026 6FF07043 		mvn	r3, #-268435456
  42 002a 4FF02042 		mov	r2, #-1610612736
  43 002e 611C     		adds	r1, r4, #1
  44 0030 42F82130 		str	r3, [r2, r1, lsl #2]
  45 0034 02F58272 		add	r2, r2, #260
  46 0038 42F82430 		str	r3, [r2, r4, lsl #2]
  47 003c 10BD     		pop	{r4, pc}
  48              	.L3:
  49 003e 43F2D202 		movw	r2, #12498
  50 0042 4FF02043 		mov	r3, #-1610612736
  51 0046 43F82420 		str	r2, [r3, r4, lsl #2]
  52 004a ECE7     		b	.L4
  53              	.L14:
  54              		.align	2
  55              	.L13:
  56 004c 00000000 		.word	.LC0
  58              		.section	.text.FSMC_NANDDeInit,"ax",%progbits
  59              		.align	1
  60              		.global	FSMC_NANDDeInit
  61              		.thumb
  62              		.thumb_func
  64              	FSMC_NANDDeInit:
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67 0000 1028     		cmp	r0, #16
  68 0002 08B5     		push	{r3, lr}
  69 0004 08D0     		beq	.L16
  70 0006 B0F5807F 		cmp	r0, #256
  71 000a 03D0     		beq	.L17
  72 000c 0748     		ldr	r0, .L23
  73 000e 8421     		movs	r1, #132
  74 0010 FFF7FEFF 		bl	assert_err
  75              	.L17:
  76 0014 064B     		ldr	r3, .L23+4
  77 0016 00E0     		b	.L22
  78              	.L16:
  79 0018 064B     		ldr	r3, .L23+8
  80              	.L22:
  81 001a 1822     		movs	r2, #24
  82 001c 1A60     		str	r2, [r3]
  83 001e 4022     		movs	r2, #64
  84 0020 5A60     		str	r2, [r3, #4]
  85 0022 4FF0FC32 		mov	r2, #-50529028
  86 0026 9A60     		str	r2, [r3, #8]
  87 0028 DA60     		str	r2, [r3, #12]
  88 002a 08BD     		pop	{r3, pc}
  89              	.L24:
  90              		.align	2
  91              	.L23:
  92 002c 00000000 		.word	.LC0
  93 0030 800000A0 		.word	-1610612608
  94 0034 600000A0 		.word	-1610612640
  96              		.section	.text.FSMC_PCCARDDeInit,"ax",%progbits
  97              		.align	1
  98              		.global	FSMC_PCCARDDeInit
  99              		.thumb
 100              		.thumb_func
 102              	FSMC_PCCARDDeInit:
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 106 0000 054B     		ldr	r3, .L26
 107 0002 1822     		movs	r2, #24
 108 0004 1A60     		str	r2, [r3]
 109 0006 0022     		movs	r2, #0
 110 0008 5A60     		str	r2, [r3, #4]
 111 000a 4FF0FC32 		mov	r2, #-50529028
 112 000e 9A60     		str	r2, [r3, #8]
 113 0010 DA60     		str	r2, [r3, #12]
 114 0012 1A61     		str	r2, [r3, #16]
 115 0014 7047     		bx	lr
 116              	.L27:
 117 0016 00BF     		.align	2
 118              	.L26:
 119 0018 A00000A0 		.word	-1610612576
 121              		.section	.text.FSMC_NORSRAMInit,"ax",%progbits
 122              		.align	1
 123              		.global	FSMC_NORSRAMInit
 124              		.thumb
 125              		.thumb_func
 127              	FSMC_NORSRAMInit:
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130 0000 0368     		ldr	r3, [r0]
 131 0002 70B5     		push	{r4, r5, r6, lr}
 132 0004 33F00602 		bics	r2, r3, #6
 133 0008 0446     		mov	r4, r0
 134 000a 03D0     		beq	.L29
 135 000c 9A48     		ldr	r0, .L106
 136 000e B321     		movs	r1, #179
 137 0010 FFF7FEFF 		bl	assert_err
 138              	.L29:
 139 0014 6368     		ldr	r3, [r4, #4]
 140 0016 33F00202 		bics	r2, r3, #2
 141 001a 03D0     		beq	.L30
 142 001c 9648     		ldr	r0, .L106
 143 001e B421     		movs	r1, #180
 144 0020 FFF7FEFF 		bl	assert_err
 145              	.L30:
 146 0024 A368     		ldr	r3, [r4, #8]
 147 0026 33F00402 		bics	r2, r3, #4
 148 002a 05D0     		beq	.L31
 149 002c 082B     		cmp	r3, #8
 150 002e 03D0     		beq	.L31
 151 0030 9148     		ldr	r0, .L106
 152 0032 B521     		movs	r1, #181
 153 0034 FFF7FEFF 		bl	assert_err
 154              	.L31:
 155 0038 E368     		ldr	r3, [r4, #12]
 156 003a 33F01002 		bics	r2, r3, #16
 157 003e 03D0     		beq	.L32
 158 0040 8D48     		ldr	r0, .L106
 159 0042 B621     		movs	r1, #182
 160 0044 FFF7FEFF 		bl	assert_err
 161              	.L32:
 162 0048 2369     		ldr	r3, [r4, #16]
 163 004a 33F48072 		bics	r2, r3, #256
 164 004e 03D0     		beq	.L33
 165 0050 8948     		ldr	r0, .L106
 166 0052 B721     		movs	r1, #183
 167 0054 FFF7FEFF 		bl	assert_err
 168              	.L33:
 169 0058 6369     		ldr	r3, [r4, #20]
 170 005a 33F40042 		bics	r2, r3, #32768
 171 005e 03D0     		beq	.L34
 172 0060 8548     		ldr	r0, .L106
 173 0062 B821     		movs	r1, #184
 174 0064 FFF7FEFF 		bl	assert_err
 175              	.L34:
 176 0068 A369     		ldr	r3, [r4, #24]
 177 006a 33F40072 		bics	r2, r3, #512
 178 006e 03D0     		beq	.L35
 179 0070 8148     		ldr	r0, .L106
 180 0072 B921     		movs	r1, #185
 181 0074 FFF7FEFF 		bl	assert_err
 182              	.L35:
 183 0078 E369     		ldr	r3, [r4, #28]
 184 007a 33F48062 		bics	r2, r3, #1024
 185 007e 03D0     		beq	.L36
 186 0080 7D48     		ldr	r0, .L106
 187 0082 BA21     		movs	r1, #186
 188 0084 FFF7FEFF 		bl	assert_err
 189              	.L36:
 190 0088 236A     		ldr	r3, [r4, #32]
 191 008a 33F40062 		bics	r2, r3, #2048
 192 008e 03D0     		beq	.L37
 193 0090 7948     		ldr	r0, .L106
 194 0092 BB21     		movs	r1, #187
 195 0094 FFF7FEFF 		bl	assert_err
 196              	.L37:
 197 0098 636A     		ldr	r3, [r4, #36]
 198 009a 33F48052 		bics	r2, r3, #4096
 199 009e 03D0     		beq	.L38
 200 00a0 7548     		ldr	r0, .L106
 201 00a2 BC21     		movs	r1, #188
 202 00a4 FFF7FEFF 		bl	assert_err
 203              	.L38:
 204 00a8 A36A     		ldr	r3, [r4, #40]
 205 00aa 33F40052 		bics	r2, r3, #8192
 206 00ae 03D0     		beq	.L39
 207 00b0 7148     		ldr	r0, .L106
 208 00b2 BD21     		movs	r1, #189
 209 00b4 FFF7FEFF 		bl	assert_err
 210              	.L39:
 211 00b8 E36A     		ldr	r3, [r4, #44]
 212 00ba 33F48042 		bics	r2, r3, #16384
 213 00be 03D0     		beq	.L40
 214 00c0 6D48     		ldr	r0, .L106
 215 00c2 BE21     		movs	r1, #190
 216 00c4 FFF7FEFF 		bl	assert_err
 217              	.L40:
 218 00c8 236B     		ldr	r3, [r4, #48]
 219 00ca 33F40022 		bics	r2, r3, #524288
 220 00ce 03D0     		beq	.L41
 221 00d0 6948     		ldr	r0, .L106
 222 00d2 BF21     		movs	r1, #191
 223 00d4 FFF7FEFF 		bl	assert_err
 224              	.L41:
 225 00d8 636B     		ldr	r3, [r4, #52]
 226 00da 1B68     		ldr	r3, [r3]
 227 00dc 0F2B     		cmp	r3, #15
 228 00de 03D9     		bls	.L42
 229 00e0 6548     		ldr	r0, .L106
 230 00e2 C021     		movs	r1, #192
 231 00e4 FFF7FEFF 		bl	assert_err
 232              	.L42:
 233 00e8 636B     		ldr	r3, [r4, #52]
 234 00ea 5B68     		ldr	r3, [r3, #4]
 235 00ec 0F2B     		cmp	r3, #15
 236 00ee 03D9     		bls	.L43
 237 00f0 6148     		ldr	r0, .L106
 238 00f2 C121     		movs	r1, #193
 239 00f4 FFF7FEFF 		bl	assert_err
 240              	.L43:
 241 00f8 636B     		ldr	r3, [r4, #52]
 242 00fa 9B68     		ldr	r3, [r3, #8]
 243 00fc 013B     		subs	r3, r3, #1
 244 00fe FE2B     		cmp	r3, #254
 245 0100 03D9     		bls	.L44
 246 0102 5D48     		ldr	r0, .L106
 247 0104 C221     		movs	r1, #194
 248 0106 FFF7FEFF 		bl	assert_err
 249              	.L44:
 250 010a 636B     		ldr	r3, [r4, #52]
 251 010c DB68     		ldr	r3, [r3, #12]
 252 010e 0F2B     		cmp	r3, #15
 253 0110 03D9     		bls	.L45
 254 0112 5948     		ldr	r0, .L106
 255 0114 C321     		movs	r1, #195
 256 0116 FFF7FEFF 		bl	assert_err
 257              	.L45:
 258 011a 636B     		ldr	r3, [r4, #52]
 259 011c 1B69     		ldr	r3, [r3, #16]
 260 011e 0F2B     		cmp	r3, #15
 261 0120 03D9     		bls	.L46
 262 0122 5548     		ldr	r0, .L106
 263 0124 C421     		movs	r1, #196
 264 0126 FFF7FEFF 		bl	assert_err
 265              	.L46:
 266 012a 636B     		ldr	r3, [r4, #52]
 267 012c 5B69     		ldr	r3, [r3, #20]
 268 012e 0F2B     		cmp	r3, #15
 269 0130 03D9     		bls	.L47
 270 0132 5148     		ldr	r0, .L106
 271 0134 C521     		movs	r1, #197
 272 0136 FFF7FEFF 		bl	assert_err
 273              	.L47:
 274 013a 636B     		ldr	r3, [r4, #52]
 275 013c 9B69     		ldr	r3, [r3, #24]
 276 013e 33F04052 		bics	r2, r3, #805306368
 277 0142 03D0     		beq	.L48
 278 0144 4C48     		ldr	r0, .L106
 279 0146 C621     		movs	r1, #198
 280 0148 FFF7FEFF 		bl	assert_err
 281              	.L48:
 282 014c A068     		ldr	r0, [r4, #8]
 283 014e 6368     		ldr	r3, [r4, #4]
 284 0150 E16A     		ldr	r1, [r4, #44]
 285 0152 40EA0305 		orr	r5, r0, r3
 286 0156 E368     		ldr	r3, [r4, #12]
 287 0158 2268     		ldr	r2, [r4]
 288 015a 1D43     		orrs	r5, r5, r3
 289 015c 2369     		ldr	r3, [r4, #16]
 290 015e 0828     		cmp	r0, #8
 291 0160 45EA0305 		orr	r5, r5, r3
 292 0164 6369     		ldr	r3, [r4, #20]
 293 0166 45EA0305 		orr	r5, r5, r3
 294 016a A369     		ldr	r3, [r4, #24]
 295 016c 45EA0305 		orr	r5, r5, r3
 296 0170 E369     		ldr	r3, [r4, #28]
 297 0172 45EA0305 		orr	r5, r5, r3
 298 0176 236A     		ldr	r3, [r4, #32]
 299 0178 45EA0305 		orr	r5, r5, r3
 300 017c 636A     		ldr	r3, [r4, #36]
 301 017e 45EA0305 		orr	r5, r5, r3
 302 0182 A36A     		ldr	r3, [r4, #40]
 303 0184 45EA0303 		orr	r3, r5, r3
 304 0188 43EA0105 		orr	r5, r3, r1
 305 018c 236B     		ldr	r3, [r4, #48]
 306 018e 45EA0305 		orr	r5, r5, r3
 307 0192 4FEA8203 		lsl	r3, r2, #2
 308 0196 03F12043 		add	r3, r3, #-1610612736
 309 019a 1D60     		str	r5, [r3]
 310 019c 03D1     		bne	.L49
 311 019e 1868     		ldr	r0, [r3]
 312 01a0 40F04000 		orr	r0, r0, #64
 313 01a4 1860     		str	r0, [r3]
 314              	.L49:
 315 01a6 636B     		ldr	r3, [r4, #52]
 316 01a8 561C     		adds	r6, r2, #1
 317 01aa 1868     		ldr	r0, [r3]
 318 01ac 9D69     		ldr	r5, [r3, #24]
 319 01ae B1F5804F 		cmp	r1, #16384
 320 01b2 45EA0005 		orr	r5, r5, r0
 321 01b6 5868     		ldr	r0, [r3, #4]
 322 01b8 45EA0015 		orr	r5, r5, r0, lsl #4
 323 01bc 9868     		ldr	r0, [r3, #8]
 324 01be 45EA0025 		orr	r5, r5, r0, lsl #8
 325 01c2 D868     		ldr	r0, [r3, #12]
 326 01c4 45EA0045 		orr	r5, r5, r0, lsl #16
 327 01c8 1869     		ldr	r0, [r3, #16]
 328 01ca 5B69     		ldr	r3, [r3, #20]
 329 01cc 45EA0050 		orr	r0, r5, r0, lsl #20
 330 01d0 40EA0360 		orr	r0, r0, r3, lsl #24
 331 01d4 4FF02043 		mov	r3, #-1610612736
 332 01d8 43F82600 		str	r0, [r3, r6, lsl #2]
 333 01dc 46D1     		bne	.L50
 334 01de A36B     		ldr	r3, [r4, #56]
 335 01e0 1B68     		ldr	r3, [r3]
 336 01e2 0F2B     		cmp	r3, #15
 337 01e4 03D9     		bls	.L51
 338 01e6 2448     		ldr	r0, .L106
 339 01e8 EA21     		movs	r1, #234
 340 01ea FFF7FEFF 		bl	assert_err
 341              	.L51:
 342 01ee A36B     		ldr	r3, [r4, #56]
 343 01f0 5B68     		ldr	r3, [r3, #4]
 344 01f2 0F2B     		cmp	r3, #15
 345 01f4 03D9     		bls	.L52
 346 01f6 2048     		ldr	r0, .L106
 347 01f8 EB21     		movs	r1, #235
 348 01fa FFF7FEFF 		bl	assert_err
 349              	.L52:
 350 01fe A36B     		ldr	r3, [r4, #56]
 351 0200 9B68     		ldr	r3, [r3, #8]
 352 0202 013B     		subs	r3, r3, #1
 353 0204 FE2B     		cmp	r3, #254
 354 0206 03D9     		bls	.L53
 355 0208 1B48     		ldr	r0, .L106
 356 020a EC21     		movs	r1, #236
 357 020c FFF7FEFF 		bl	assert_err
 358              	.L53:
 359 0210 A36B     		ldr	r3, [r4, #56]
 360 0212 1B69     		ldr	r3, [r3, #16]
 361 0214 0F2B     		cmp	r3, #15
 362 0216 03D9     		bls	.L54
 363 0218 1748     		ldr	r0, .L106
 364 021a ED21     		movs	r1, #237
 365 021c FFF7FEFF 		bl	assert_err
 366              	.L54:
 367 0220 A36B     		ldr	r3, [r4, #56]
 368 0222 5B69     		ldr	r3, [r3, #20]
 369 0224 0F2B     		cmp	r3, #15
 370 0226 03D9     		bls	.L55
 371 0228 1348     		ldr	r0, .L106
 372 022a EE21     		movs	r1, #238
 373 022c FFF7FEFF 		bl	assert_err
 374              	.L55:
 375 0230 A36B     		ldr	r3, [r4, #56]
 376 0232 9B69     		ldr	r3, [r3, #24]
 377 0234 33F04052 		bics	r2, r3, #805306368
 378 0238 03D0     		beq	.L56
 379 023a 0F48     		ldr	r0, .L106
 380 023c EF21     		movs	r1, #239
 381 023e FFF7FEFF 		bl	assert_err
 382              	.L56:
 383 0242 A36B     		ldr	r3, [r4, #56]
 384 0244 2068     		ldr	r0, [r4]
 385 0246 1A68     		ldr	r2, [r3]
 386 0248 9969     		ldr	r1, [r3, #24]
 387 024a 1143     		orrs	r1, r1, r2
 388 024c 5A68     		ldr	r2, [r3, #4]
 389 024e 41EA0211 		orr	r1, r1, r2, lsl #4
 390 0252 9A68     		ldr	r2, [r3, #8]
 391 0254 41EA0221 		orr	r1, r1, r2, lsl #8
 392 0258 1A69     		ldr	r2, [r3, #16]
 393 025a 5B69     		ldr	r3, [r3, #20]
 394 025c 41EA0252 		orr	r2, r1, r2, lsl #20
 395 0260 42EA0362 		orr	r2, r2, r3, lsl #24
 396 0264 054B     		ldr	r3, .L106+4
 397 0266 43F82020 		str	r2, [r3, r0, lsl #2]
 398 026a 70BD     		pop	{r4, r5, r6, pc}
 399              	.L50:
 400 026c 034B     		ldr	r3, .L106+4
 401 026e 6FF07041 		mvn	r1, #-268435456
 402 0272 43F82210 		str	r1, [r3, r2, lsl #2]
 403 0276 70BD     		pop	{r4, r5, r6, pc}
 404              	.L107:
 405              		.align	2
 406              	.L106:
 407 0278 00000000 		.word	.LC0
 408 027c 040100A0 		.word	-1610612476
 410              		.section	.text.FSMC_NANDInit,"ax",%progbits
 411              		.align	1
 412              		.global	FSMC_NANDInit
 413              		.thumb
 414              		.thumb_func
 416              	FSMC_NANDInit:
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419 0000 0368     		ldr	r3, [r0]
 420 0002 70B5     		push	{r4, r5, r6, lr}
 421 0004 102B     		cmp	r3, #16
 422 0006 0446     		mov	r4, r0
 423 0008 07D0     		beq	.L109
 424 000a B3F5807F 		cmp	r3, #256
 425 000e 04D0     		beq	.L109
 426 0010 5A48     		ldr	r0, .L148
 427 0012 40F20B11 		movw	r1, #267
 428 0016 FFF7FEFF 		bl	assert_err
 429              	.L109:
 430 001a 6368     		ldr	r3, [r4, #4]
 431 001c 33F00201 		bics	r1, r3, #2
 432 0020 04D0     		beq	.L110
 433 0022 5648     		ldr	r0, .L148
 434 0024 4FF48671 		mov	r1, #268
 435 0028 FFF7FEFF 		bl	assert_err
 436              	.L110:
 437 002c A368     		ldr	r3, [r4, #8]
 438 002e 33F01002 		bics	r2, r3, #16
 439 0032 04D0     		beq	.L111
 440 0034 5148     		ldr	r0, .L148
 441 0036 40F20D11 		movw	r1, #269
 442 003a FFF7FEFF 		bl	assert_err
 443              	.L111:
 444 003e E368     		ldr	r3, [r4, #12]
 445 0040 33F04001 		bics	r1, r3, #64
 446 0044 04D0     		beq	.L112
 447 0046 4D48     		ldr	r0, .L148
 448 0048 4FF48771 		mov	r1, #270
 449 004c FFF7FEFF 		bl	assert_err
 450              	.L112:
 451 0050 2369     		ldr	r3, [r4, #16]
 452 0052 33F4C021 		bics	r1, r3, #393216
 453 0056 23F40032 		bic	r2, r3, #131072
 454 005a 07D0     		beq	.L113
 455 005c B2F5002F 		cmp	r2, #524288
 456 0060 04D0     		beq	.L113
 457 0062 4648     		ldr	r0, .L148
 458 0064 40F20F11 		movw	r1, #271
 459 0068 FFF7FEFF 		bl	assert_err
 460              	.L113:
 461 006c 6369     		ldr	r3, [r4, #20]
 462 006e FF2B     		cmp	r3, #255
 463 0070 04D9     		bls	.L114
 464 0072 4248     		ldr	r0, .L148
 465 0074 4FF48871 		mov	r1, #272
 466 0078 FFF7FEFF 		bl	assert_err
 467              	.L114:
 468 007c A369     		ldr	r3, [r4, #24]
 469 007e FF2B     		cmp	r3, #255
 470 0080 04D9     		bls	.L115
 471 0082 3E48     		ldr	r0, .L148
 472 0084 40F21111 		movw	r1, #273
 473 0088 FFF7FEFF 		bl	assert_err
 474              	.L115:
 475 008c E369     		ldr	r3, [r4, #28]
 476 008e 1B68     		ldr	r3, [r3]
 477 0090 FF2B     		cmp	r3, #255
 478 0092 04D9     		bls	.L116
 479 0094 3948     		ldr	r0, .L148
 480 0096 4FF48971 		mov	r1, #274
 481 009a FFF7FEFF 		bl	assert_err
 482              	.L116:
 483 009e E369     		ldr	r3, [r4, #28]
 484 00a0 5B68     		ldr	r3, [r3, #4]
 485 00a2 FF2B     		cmp	r3, #255
 486 00a4 04D9     		bls	.L117
 487 00a6 3548     		ldr	r0, .L148
 488 00a8 40F21311 		movw	r1, #275
 489 00ac FFF7FEFF 		bl	assert_err
 490              	.L117:
 491 00b0 E369     		ldr	r3, [r4, #28]
 492 00b2 9B68     		ldr	r3, [r3, #8]
 493 00b4 FF2B     		cmp	r3, #255
 494 00b6 04D9     		bls	.L118
 495 00b8 3048     		ldr	r0, .L148
 496 00ba 4FF48A71 		mov	r1, #276
 497 00be FFF7FEFF 		bl	assert_err
 498              	.L118:
 499 00c2 E369     		ldr	r3, [r4, #28]
 500 00c4 DB68     		ldr	r3, [r3, #12]
 501 00c6 FF2B     		cmp	r3, #255
 502 00c8 04D9     		bls	.L119
 503 00ca 2C48     		ldr	r0, .L148
 504 00cc 40F21511 		movw	r1, #277
 505 00d0 FFF7FEFF 		bl	assert_err
 506              	.L119:
 507 00d4 236A     		ldr	r3, [r4, #32]
 508 00d6 1B68     		ldr	r3, [r3]
 509 00d8 FF2B     		cmp	r3, #255
 510 00da 04D9     		bls	.L120
 511 00dc 2748     		ldr	r0, .L148
 512 00de 4FF48B71 		mov	r1, #278
 513 00e2 FFF7FEFF 		bl	assert_err
 514              	.L120:
 515 00e6 236A     		ldr	r3, [r4, #32]
 516 00e8 5B68     		ldr	r3, [r3, #4]
 517 00ea FF2B     		cmp	r3, #255
 518 00ec 04D9     		bls	.L121
 519 00ee 2348     		ldr	r0, .L148
 520 00f0 40F21711 		movw	r1, #279
 521 00f4 FFF7FEFF 		bl	assert_err
 522              	.L121:
 523 00f8 236A     		ldr	r3, [r4, #32]
 524 00fa 9B68     		ldr	r3, [r3, #8]
 525 00fc FF2B     		cmp	r3, #255
 526 00fe 04D9     		bls	.L122
 527 0100 1E48     		ldr	r0, .L148
 528 0102 4FF48C71 		mov	r1, #280
 529 0106 FFF7FEFF 		bl	assert_err
 530              	.L122:
 531 010a 236A     		ldr	r3, [r4, #32]
 532 010c DB68     		ldr	r3, [r3, #12]
 533 010e FF2B     		cmp	r3, #255
 534 0110 04D9     		bls	.L123
 535 0112 1A48     		ldr	r0, .L148
 536 0114 40F21911 		movw	r1, #281
 537 0118 FFF7FEFF 		bl	assert_err
 538              	.L123:
 539 011c 6268     		ldr	r2, [r4, #4]
 540 011e A368     		ldr	r3, [r4, #8]
 541 0120 42EA0300 		orr	r0, r2, r3
 542 0124 E368     		ldr	r3, [r4, #12]
 543 0126 40F00800 		orr	r0, r0, #8
 544 012a 1843     		orrs	r0, r0, r3
 545 012c 2369     		ldr	r3, [r4, #16]
 546 012e 1843     		orrs	r0, r0, r3
 547 0130 6369     		ldr	r3, [r4, #20]
 548 0132 40EA4320 		orr	r0, r0, r3, lsl #9
 549 0136 A369     		ldr	r3, [r4, #24]
 550 0138 40EA4330 		orr	r0, r0, r3, lsl #13
 551 013c E369     		ldr	r3, [r4, #28]
 552 013e 9A68     		ldr	r2, [r3, #8]
 553 0140 5D68     		ldr	r5, [r3, #4]
 554 0142 1204     		lsls	r2, r2, #16
 555 0144 42EA0525 		orr	r5, r2, r5, lsl #8
 556 0148 1A68     		ldr	r2, [r3]
 557 014a D968     		ldr	r1, [r3, #12]
 558 014c 236A     		ldr	r3, [r4, #32]
 559 014e 2A43     		orrs	r2, r2, r5
 560 0150 42EA0161 		orr	r1, r2, r1, lsl #24
 561 0154 9A68     		ldr	r2, [r3, #8]
 562 0156 5E68     		ldr	r6, [r3, #4]
 563 0158 1204     		lsls	r2, r2, #16
 564 015a 1D68     		ldr	r5, [r3]
 565 015c 42EA0626 		orr	r6, r2, r6, lsl #8
 566 0160 DA68     		ldr	r2, [r3, #12]
 567 0162 2368     		ldr	r3, [r4]
 568 0164 3543     		orrs	r5, r5, r6
 569 0166 102B     		cmp	r3, #16
 570 0168 0CBF     		ite	eq
 571 016a 054B     		ldreq	r3, .L148+4
 572 016c 054B     		ldrne	r3, .L148+8
 573 016e 45EA0262 		orr	r2, r5, r2, lsl #24
 574 0172 1860     		str	r0, [r3]
 575 0174 9960     		str	r1, [r3, #8]
 576 0176 DA60     		str	r2, [r3, #12]
 577 0178 70BD     		pop	{r4, r5, r6, pc}
 578              	.L149:
 579 017a 00BF     		.align	2
 580              	.L148:
 581 017c 00000000 		.word	.LC0
 582 0180 600000A0 		.word	-1610612640
 583 0184 800000A0 		.word	-1610612608
 585              		.section	.text.FSMC_PCCARDInit,"ax",%progbits
 586              		.align	1
 587              		.global	FSMC_PCCARDInit
 588              		.thumb
 589              		.thumb_func
 591              	FSMC_PCCARDInit:
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 594 0000 0368     		ldr	r3, [r0]
 595 0002 10B5     		push	{r4, lr}
 596 0004 33F00202 		bics	r2, r3, #2
 597 0008 0446     		mov	r4, r0
 598 000a 04D0     		beq	.L151
 599 000c 5848     		ldr	r0, .L169
 600 000e 40F24B11 		movw	r1, #331
 601 0012 FFF7FEFF 		bl	assert_err
 602              	.L151:
 603 0016 6368     		ldr	r3, [r4, #4]
 604 0018 FF2B     		cmp	r3, #255
 605 001a 04D9     		bls	.L152
 606 001c 5448     		ldr	r0, .L169
 607 001e 4FF4A671 		mov	r1, #332
 608 0022 FFF7FEFF 		bl	assert_err
 609              	.L152:
 610 0026 A368     		ldr	r3, [r4, #8]
 611 0028 FF2B     		cmp	r3, #255
 612 002a 04D9     		bls	.L153
 613 002c 5048     		ldr	r0, .L169
 614 002e 40F24D11 		movw	r1, #333
 615 0032 FFF7FEFF 		bl	assert_err
 616              	.L153:
 617 0036 E368     		ldr	r3, [r4, #12]
 618 0038 1B68     		ldr	r3, [r3]
 619 003a FF2B     		cmp	r3, #255
 620 003c 04D9     		bls	.L154
 621 003e 4C48     		ldr	r0, .L169
 622 0040 40F24F11 		movw	r1, #335
 623 0044 FFF7FEFF 		bl	assert_err
 624              	.L154:
 625 0048 E368     		ldr	r3, [r4, #12]
 626 004a 5B68     		ldr	r3, [r3, #4]
 627 004c FF2B     		cmp	r3, #255
 628 004e 04D9     		bls	.L155
 629 0050 4748     		ldr	r0, .L169
 630 0052 4FF4A871 		mov	r1, #336
 631 0056 FFF7FEFF 		bl	assert_err
 632              	.L155:
 633 005a E368     		ldr	r3, [r4, #12]
 634 005c 9B68     		ldr	r3, [r3, #8]
 635 005e FF2B     		cmp	r3, #255
 636 0060 04D9     		bls	.L156
 637 0062 4348     		ldr	r0, .L169
 638 0064 40F25111 		movw	r1, #337
 639 0068 FFF7FEFF 		bl	assert_err
 640              	.L156:
 641 006c E368     		ldr	r3, [r4, #12]
 642 006e DB68     		ldr	r3, [r3, #12]
 643 0070 FF2B     		cmp	r3, #255
 644 0072 04D9     		bls	.L157
 645 0074 3E48     		ldr	r0, .L169
 646 0076 4FF4A971 		mov	r1, #338
 647 007a FFF7FEFF 		bl	assert_err
 648              	.L157:
 649 007e 2369     		ldr	r3, [r4, #16]
 650 0080 1B68     		ldr	r3, [r3]
 651 0082 FF2B     		cmp	r3, #255
 652 0084 04D9     		bls	.L158
 653 0086 3A48     		ldr	r0, .L169
 654 0088 4FF4AA71 		mov	r1, #340
 655 008c FFF7FEFF 		bl	assert_err
 656              	.L158:
 657 0090 2369     		ldr	r3, [r4, #16]
 658 0092 5B68     		ldr	r3, [r3, #4]
 659 0094 FF2B     		cmp	r3, #255
 660 0096 04D9     		bls	.L159
 661 0098 3548     		ldr	r0, .L169
 662 009a 40F25511 		movw	r1, #341
 663 009e FFF7FEFF 		bl	assert_err
 664              	.L159:
 665 00a2 2369     		ldr	r3, [r4, #16]
 666 00a4 9B68     		ldr	r3, [r3, #8]
 667 00a6 FF2B     		cmp	r3, #255
 668 00a8 04D9     		bls	.L160
 669 00aa 3148     		ldr	r0, .L169
 670 00ac 4FF4AB71 		mov	r1, #342
 671 00b0 FFF7FEFF 		bl	assert_err
 672              	.L160:
 673 00b4 2369     		ldr	r3, [r4, #16]
 674 00b6 DB68     		ldr	r3, [r3, #12]
 675 00b8 FF2B     		cmp	r3, #255
 676 00ba 04D9     		bls	.L161
 677 00bc 2C48     		ldr	r0, .L169
 678 00be 40F25711 		movw	r1, #343
 679 00c2 FFF7FEFF 		bl	assert_err
 680              	.L161:
 681 00c6 6369     		ldr	r3, [r4, #20]
 682 00c8 1B68     		ldr	r3, [r3]
 683 00ca FF2B     		cmp	r3, #255
 684 00cc 04D9     		bls	.L162
 685 00ce 2848     		ldr	r0, .L169
 686 00d0 4FF4AC71 		mov	r1, #344
 687 00d4 FFF7FEFF 		bl	assert_err
 688              	.L162:
 689 00d8 6369     		ldr	r3, [r4, #20]
 690 00da 5B68     		ldr	r3, [r3, #4]
 691 00dc FF2B     		cmp	r3, #255
 692 00de 04D9     		bls	.L163
 693 00e0 2348     		ldr	r0, .L169
 694 00e2 40F25911 		movw	r1, #345
 695 00e6 FFF7FEFF 		bl	assert_err
 696              	.L163:
 697 00ea 6369     		ldr	r3, [r4, #20]
 698 00ec 9B68     		ldr	r3, [r3, #8]
 699 00ee FF2B     		cmp	r3, #255
 700 00f0 04D9     		bls	.L164
 701 00f2 1F48     		ldr	r0, .L169
 702 00f4 4FF4AD71 		mov	r1, #346
 703 00f8 FFF7FEFF 		bl	assert_err
 704              	.L164:
 705 00fc 6369     		ldr	r3, [r4, #20]
 706 00fe DB68     		ldr	r3, [r3, #12]
 707 0100 FF2B     		cmp	r3, #255
 708 0102 04D9     		bls	.L165
 709 0104 1A48     		ldr	r0, .L169
 710 0106 40F25B11 		movw	r1, #347
 711 010a FFF7FEFF 		bl	assert_err
 712              	.L165:
 713 010e 2368     		ldr	r3, [r4]
 714 0110 43F01002 		orr	r2, r3, #16
 715 0114 6368     		ldr	r3, [r4, #4]
 716 0116 42EA4322 		orr	r2, r2, r3, lsl #9
 717 011a A368     		ldr	r3, [r4, #8]
 718 011c 42EA4332 		orr	r2, r2, r3, lsl #13
 719 0120 144B     		ldr	r3, .L169+4
 720 0122 1A60     		str	r2, [r3]
 721 0124 E268     		ldr	r2, [r4, #12]
 722 0126 9168     		ldr	r1, [r2, #8]
 723 0128 5068     		ldr	r0, [r2, #4]
 724 012a 0904     		lsls	r1, r1, #16
 725 012c 41EA0020 		orr	r0, r1, r0, lsl #8
 726 0130 1168     		ldr	r1, [r2]
 727 0132 0143     		orrs	r1, r1, r0
 728 0134 D068     		ldr	r0, [r2, #12]
 729 0136 2269     		ldr	r2, [r4, #16]
 730 0138 41EA0061 		orr	r1, r1, r0, lsl #24
 731 013c 9960     		str	r1, [r3, #8]
 732 013e 9168     		ldr	r1, [r2, #8]
 733 0140 5068     		ldr	r0, [r2, #4]
 734 0142 0904     		lsls	r1, r1, #16
 735 0144 41EA0020 		orr	r0, r1, r0, lsl #8
 736 0148 1168     		ldr	r1, [r2]
 737 014a 0143     		orrs	r1, r1, r0
 738 014c D068     		ldr	r0, [r2, #12]
 739 014e 6269     		ldr	r2, [r4, #20]
 740 0150 41EA0061 		orr	r1, r1, r0, lsl #24
 741 0154 D960     		str	r1, [r3, #12]
 742 0156 9168     		ldr	r1, [r2, #8]
 743 0158 5068     		ldr	r0, [r2, #4]
 744 015a 0904     		lsls	r1, r1, #16
 745 015c 41EA0020 		orr	r0, r1, r0, lsl #8
 746 0160 1168     		ldr	r1, [r2]
 747 0162 0143     		orrs	r1, r1, r0
 748 0164 D068     		ldr	r0, [r2, #12]
 749 0166 41EA0061 		orr	r1, r1, r0, lsl #24
 750 016a 1961     		str	r1, [r3, #16]
 751 016c 10BD     		pop	{r4, pc}
 752              	.L170:
 753 016e 00BF     		.align	2
 754              	.L169:
 755 0170 00000000 		.word	.LC0
 756 0174 A00000A0 		.word	-1610612576
 758              		.section	.text.FSMC_NORSRAMStructInit,"ax",%progbits
 759              		.align	1
 760              		.global	FSMC_NORSRAMStructInit
 761              		.thumb
 762              		.thumb_func
 764              	FSMC_NORSRAMStructInit:
 765              		@ args = 0, pretend = 0, frame = 0
 766              		@ frame_needed = 0, uses_anonymous_args = 0
 767 0000 0222     		movs	r2, #2
 768 0002 10B5     		push	{r4, lr}
 769 0004 4260     		str	r2, [r0, #4]
 770 0006 4FF48052 		mov	r2, #4096
 771 000a 4262     		str	r2, [r0, #36]
 772 000c 416B     		ldr	r1, [r0, #52]
 773 000e 4FF40052 		mov	r2, #8192
 774 0012 8262     		str	r2, [r0, #40]
 775 0014 0023     		movs	r3, #0
 776 0016 0F22     		movs	r2, #15
 777 0018 FF24     		movs	r4, #255
 778 001a 0360     		str	r3, [r0]
 779 001c 8360     		str	r3, [r0, #8]
 780 001e C360     		str	r3, [r0, #12]
 781 0020 0361     		str	r3, [r0, #16]
 782 0022 4361     		str	r3, [r0, #20]
 783 0024 8361     		str	r3, [r0, #24]
 784 0026 C361     		str	r3, [r0, #28]
 785 0028 0362     		str	r3, [r0, #32]
 786 002a C362     		str	r3, [r0, #44]
 787 002c 0363     		str	r3, [r0, #48]
 788 002e 0A60     		str	r2, [r1]
 789 0030 4A60     		str	r2, [r1, #4]
 790 0032 8C60     		str	r4, [r1, #8]
 791 0034 CA60     		str	r2, [r1, #12]
 792 0036 0A61     		str	r2, [r1, #16]
 793 0038 4A61     		str	r2, [r1, #20]
 794 003a 8B61     		str	r3, [r1, #24]
 795 003c 816B     		ldr	r1, [r0, #56]
 796 003e 0A60     		str	r2, [r1]
 797 0040 4A60     		str	r2, [r1, #4]
 798 0042 8C60     		str	r4, [r1, #8]
 799 0044 CA60     		str	r2, [r1, #12]
 800 0046 0A61     		str	r2, [r1, #16]
 801 0048 4A61     		str	r2, [r1, #20]
 802 004a 8B61     		str	r3, [r1, #24]
 803 004c 10BD     		pop	{r4, pc}
 805              		.section	.text.FSMC_NANDStructInit,"ax",%progbits
 806              		.align	1
 807              		.global	FSMC_NANDStructInit
 808              		.thumb
 809              		.thumb_func
 811              	FSMC_NANDStructInit:
 812              		@ args = 0, pretend = 0, frame = 0
 813              		@ frame_needed = 0, uses_anonymous_args = 0
 814              		@ link register save eliminated.
 815 0000 1023     		movs	r3, #16
 816 0002 0360     		str	r3, [r0]
 817 0004 C269     		ldr	r2, [r0, #28]
 818 0006 0023     		movs	r3, #0
 819 0008 4360     		str	r3, [r0, #4]
 820 000a 8360     		str	r3, [r0, #8]
 821 000c C360     		str	r3, [r0, #12]
 822 000e 0361     		str	r3, [r0, #16]
 823 0010 4361     		str	r3, [r0, #20]
 824 0012 8361     		str	r3, [r0, #24]
 825 0014 FC23     		movs	r3, #252
 826 0016 1360     		str	r3, [r2]
 827 0018 5360     		str	r3, [r2, #4]
 828 001a 9360     		str	r3, [r2, #8]
 829 001c D360     		str	r3, [r2, #12]
 830 001e 026A     		ldr	r2, [r0, #32]
 831 0020 1360     		str	r3, [r2]
 832 0022 5360     		str	r3, [r2, #4]
 833 0024 9360     		str	r3, [r2, #8]
 834 0026 D360     		str	r3, [r2, #12]
 835 0028 7047     		bx	lr
 837              		.section	.text.FSMC_PCCARDStructInit,"ax",%progbits
 838              		.align	1
 839              		.global	FSMC_PCCARDStructInit
 840              		.thumb
 841              		.thumb_func
 843              	FSMC_PCCARDStructInit:
 844              		@ args = 0, pretend = 0, frame = 0
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 846              		@ link register save eliminated.
 847 0000 C268     		ldr	r2, [r0, #12]
 848 0002 0023     		movs	r3, #0
 849 0004 0360     		str	r3, [r0]
 850 0006 4360     		str	r3, [r0, #4]
 851 0008 8360     		str	r3, [r0, #8]
 852 000a FC23     		movs	r3, #252
 853 000c 1360     		str	r3, [r2]
 854 000e 5360     		str	r3, [r2, #4]
 855 0010 9360     		str	r3, [r2, #8]
 856 0012 D360     		str	r3, [r2, #12]
 857 0014 0269     		ldr	r2, [r0, #16]
 858 0016 1360     		str	r3, [r2]
 859 0018 5360     		str	r3, [r2, #4]
 860 001a 9360     		str	r3, [r2, #8]
 861 001c D360     		str	r3, [r2, #12]
 862 001e 4269     		ldr	r2, [r0, #20]
 863 0020 1360     		str	r3, [r2]
 864 0022 5360     		str	r3, [r2, #4]
 865 0024 9360     		str	r3, [r2, #8]
 866 0026 D360     		str	r3, [r2, #12]
 867 0028 7047     		bx	lr
 869              		.section	.text.FSMC_NORSRAMCmd,"ax",%progbits
 870              		.align	1
 871              		.global	FSMC_NORSRAMCmd
 872              		.thumb
 873              		.thumb_func
 875              	FSMC_NORSRAMCmd:
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878 0000 38B5     		push	{r3, r4, r5, lr}
 879 0002 30F00603 		bics	r3, r0, #6
 880 0006 0446     		mov	r4, r0
 881 0008 0D46     		mov	r5, r1
 882 000a 04D0     		beq	.L175
 883 000c 0E48     		ldr	r0, .L184
 884 000e 40F2DD11 		movw	r1, #477
 885 0012 FFF7FEFF 		bl	assert_err
 886              	.L175:
 887 0016 012D     		cmp	r5, #1
 888 0018 4FEA8404 		lsl	r4, r4, #2
 889 001c 05D9     		bls	.L176
 890 001e 0A48     		ldr	r0, .L184
 891 0020 4FF4EF71 		mov	r1, #478
 892 0024 FFF7FEFF 		bl	assert_err
 893 0028 00E0     		b	.L177
 894              	.L176:
 895 002a 2DB1     		cbz	r5, .L178
 896              	.L177:
 897 002c 04F12044 		add	r4, r4, #-1610612736
 898 0030 2368     		ldr	r3, [r4]
 899 0032 43F00103 		orr	r3, r3, #1
 900 0036 04E0     		b	.L183
 901              	.L178:
 902 0038 04F12044 		add	r4, r4, #-1610612736
 903 003c 2268     		ldr	r2, [r4]
 904 003e 034B     		ldr	r3, .L184+4
 905 0040 1340     		ands	r3, r3, r2
 906              	.L183:
 907 0042 2360     		str	r3, [r4]
 908 0044 38BD     		pop	{r3, r4, r5, pc}
 909              	.L185:
 910 0046 00BF     		.align	2
 911              	.L184:
 912 0048 00000000 		.word	.LC0
 913 004c FEFF0F00 		.word	1048574
 915              		.section	.text.FSMC_NANDCmd,"ax",%progbits
 916              		.align	1
 917              		.global	FSMC_NANDCmd
 918              		.thumb
 919              		.thumb_func
 921              	FSMC_NANDCmd:
 922              		@ args = 0, pretend = 0, frame = 0
 923              		@ frame_needed = 0, uses_anonymous_args = 0
 924 0000 1028     		cmp	r0, #16
 925 0002 38B5     		push	{r3, r4, r5, lr}
 926 0004 0446     		mov	r4, r0
 927 0006 0D46     		mov	r5, r1
 928 0008 07D0     		beq	.L187
 929 000a B0F5807F 		cmp	r0, #256
 930 000e 04D0     		beq	.L187
 931 0010 0F48     		ldr	r0, .L202
 932 0012 40F2F711 		movw	r1, #503
 933 0016 FFF7FEFF 		bl	assert_err
 934              	.L187:
 935 001a 012D     		cmp	r5, #1
 936 001c 05D9     		bls	.L188
 937 001e 0C48     		ldr	r0, .L202
 938 0020 4FF4FC71 		mov	r1, #504
 939 0024 FFF7FEFF 		bl	assert_err
 940 0028 00E0     		b	.L189
 941              	.L188:
 942 002a 45B1     		cbz	r5, .L190
 943              	.L189:
 944 002c 102C     		cmp	r4, #16
 945 002e 0CBF     		ite	eq
 946 0030 084B     		ldreq	r3, .L202+4
 947 0032 094B     		ldrne	r3, .L202+8
 948 0034 1A68     		ldr	r2, [r3]
 949 0036 42F00402 		orr	r2, r2, #4
 950 003a 1A60     		str	r2, [r3]
 951 003c 38BD     		pop	{r3, r4, r5, pc}
 952              	.L190:
 953 003e 102C     		cmp	r4, #16
 954 0040 0CBF     		ite	eq
 955 0042 044A     		ldreq	r2, .L202+4
 956 0044 044A     		ldrne	r2, .L202+8
 957 0046 054B     		ldr	r3, .L202+12
 958 0048 1168     		ldr	r1, [r2]
 959 004a 0B40     		ands	r3, r3, r1
 960 004c 1360     		str	r3, [r2]
 961 004e 38BD     		pop	{r3, r4, r5, pc}
 962              	.L203:
 963              		.align	2
 964              	.L202:
 965 0050 00000000 		.word	.LC0
 966 0054 600000A0 		.word	-1610612640
 967 0058 800000A0 		.word	-1610612608
 968 005c FBFF0F00 		.word	1048571
 970              		.section	.text.FSMC_PCCARDCmd,"ax",%progbits
 971              		.align	1
 972              		.global	FSMC_PCCARDCmd
 973              		.thumb
 974              		.thumb_func
 976              	FSMC_PCCARDCmd:
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
 979 0000 0128     		cmp	r0, #1
 980 0002 10B5     		push	{r4, lr}
 981 0004 084C     		ldr	r4, .L210
 982 0006 05D9     		bls	.L205
 983 0008 0848     		ldr	r0, .L210+4
 984 000a 4FF40771 		mov	r1, #540
 985 000e FFF7FEFF 		bl	assert_err
 986 0012 00E0     		b	.L206
 987              	.L205:
 988 0014 18B1     		cbz	r0, .L207
 989              	.L206:
 990 0016 2368     		ldr	r3, [r4]
 991 0018 43F00403 		orr	r3, r3, #4
 992 001c 02E0     		b	.L209
 993              	.L207:
 994 001e 2268     		ldr	r2, [r4]
 995 0020 034B     		ldr	r3, .L210+8
 996 0022 1340     		ands	r3, r3, r2
 997              	.L209:
 998 0024 2360     		str	r3, [r4]
 999 0026 10BD     		pop	{r4, pc}
 1000              	.L211:
 1001              		.align	2
 1002              	.L210:
 1003 0028 A00000A0 		.word	-1610612576
 1004 002c 00000000 		.word	.LC0
 1005 0030 FBFF0F00 		.word	1048571
 1007              		.section	.text.FSMC_NANDECCCmd,"ax",%progbits
 1008              		.align	1
 1009              		.global	FSMC_NANDECCCmd
 1010              		.thumb
 1011              		.thumb_func
 1013              	FSMC_NANDECCCmd:
 1014              		@ args = 0, pretend = 0, frame = 0
 1015              		@ frame_needed = 0, uses_anonymous_args = 0
 1016 0000 1028     		cmp	r0, #16
 1017 0002 38B5     		push	{r3, r4, r5, lr}
 1018 0004 0446     		mov	r4, r0
 1019 0006 0D46     		mov	r5, r1
 1020 0008 07D0     		beq	.L213
 1021 000a B0F5807F 		cmp	r0, #256
 1022 000e 04D0     		beq	.L213
 1023 0010 0F48     		ldr	r0, .L228
 1024 0012 40F23621 		movw	r1, #566
 1025 0016 FFF7FEFF 		bl	assert_err
 1026              	.L213:
 1027 001a 012D     		cmp	r5, #1
 1028 001c 05D9     		bls	.L214
 1029 001e 0C48     		ldr	r0, .L228
 1030 0020 40F23721 		movw	r1, #567
 1031 0024 FFF7FEFF 		bl	assert_err
 1032 0028 00E0     		b	.L215
 1033              	.L214:
 1034 002a 45B1     		cbz	r5, .L216
 1035              	.L215:
 1036 002c 102C     		cmp	r4, #16
 1037 002e 0CBF     		ite	eq
 1038 0030 084B     		ldreq	r3, .L228+4
 1039 0032 094B     		ldrne	r3, .L228+8
 1040 0034 1A68     		ldr	r2, [r3]
 1041 0036 42F04002 		orr	r2, r2, #64
 1042 003a 1A60     		str	r2, [r3]
 1043 003c 38BD     		pop	{r3, r4, r5, pc}
 1044              	.L216:
 1045 003e 102C     		cmp	r4, #16
 1046 0040 0CBF     		ite	eq
 1047 0042 044A     		ldreq	r2, .L228+4
 1048 0044 044A     		ldrne	r2, .L228+8
 1049 0046 054B     		ldr	r3, .L228+12
 1050 0048 1168     		ldr	r1, [r2]
 1051 004a 0B40     		ands	r3, r3, r1
 1052 004c 1360     		str	r3, [r2]
 1053 004e 38BD     		pop	{r3, r4, r5, pc}
 1054              	.L229:
 1055              		.align	2
 1056              	.L228:
 1057 0050 00000000 		.word	.LC0
 1058 0054 600000A0 		.word	-1610612640
 1059 0058 800000A0 		.word	-1610612608
 1060 005c BFFF0F00 		.word	1048511
 1062              		.section	.text.FSMC_GetECC,"ax",%progbits
 1063              		.align	1
 1064              		.global	FSMC_GetECC
 1065              		.thumb
 1066              		.thumb_func
 1068              	FSMC_GetECC:
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 0, uses_anonymous_args = 0
 1071              		@ link register save eliminated.
 1072 0000 1028     		cmp	r0, #16
 1073 0002 0CBF     		ite	eq
 1074 0004 014B     		ldreq	r3, .L234
 1075 0006 024B     		ldrne	r3, .L234+4
 1076 0008 5869     		ldr	r0, [r3, #20]
 1077 000a 7047     		bx	lr
 1078              	.L235:
 1079              		.align	2
 1080              	.L234:
 1081 000c 600000A0 		.word	-1610612640
 1082 0010 800000A0 		.word	-1610612608
 1084              		.section	.text.FSMC_ITConfig,"ax",%progbits
 1085              		.align	1
 1086              		.global	FSMC_ITConfig
 1087              		.thumb
 1088              		.thumb_func
 1090              	FSMC_ITConfig:
 1091              		@ args = 0, pretend = 0, frame = 0
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
 1093 0000 1028     		cmp	r0, #16
 1094 0002 70B5     		push	{r4, r5, r6, lr}
 1095 0004 0446     		mov	r4, r0
 1096 0006 0D46     		mov	r5, r1
 1097 0008 1646     		mov	r6, r2
 1098 000a 0AD0     		beq	.L237
 1099 000c B0F5807F 		cmp	r0, #256
 1100 0010 07D0     		beq	.L237
 1101 0012 B0F5805F 		cmp	r0, #4096
 1102 0016 04D0     		beq	.L237
 1103 0018 1848     		ldr	r0, .L260
 1104 001a 40F27F21 		movw	r1, #639
 1105 001e FFF7FEFF 		bl	assert_err
 1106              	.L237:
 1107 0022 35F03803 		bics	r3, r5, #56
 1108 0026 00D1     		bne	.L238
 1109 0028 25B9     		cbnz	r5, .L239
 1110              	.L238:
 1111 002a 1448     		ldr	r0, .L260
 1112 002c 4FF42071 		mov	r1, #640
 1113 0030 FFF7FEFF 		bl	assert_err
 1114              	.L239:
 1115 0034 012E     		cmp	r6, #1
 1116 0036 05D9     		bls	.L240
 1117 0038 1048     		ldr	r0, .L260
 1118 003a 40F28121 		movw	r1, #641
 1119 003e FFF7FEFF 		bl	assert_err
 1120 0042 00E0     		b	.L241
 1121              	.L240:
 1122 0044 5EB1     		cbz	r6, .L242
 1123              	.L241:
 1124 0046 102C     		cmp	r4, #16
 1125 0048 01D1     		bne	.L243
 1126 004a 0D4B     		ldr	r3, .L260+4
 1127 004c 04E0     		b	.L259
 1128              	.L243:
 1129 004e B4F5807F 		cmp	r4, #256
 1130 0052 0CBF     		ite	eq
 1131 0054 0B4B     		ldreq	r3, .L260+8
 1132 0056 0C4B     		ldrne	r3, .L260+12
 1133              	.L259:
 1134 0058 5A68     		ldr	r2, [r3, #4]
 1135 005a 1543     		orrs	r5, r5, r2
 1136 005c 0CE0     		b	.L258
 1137              	.L242:
 1138 005e 102C     		cmp	r4, #16
 1139 0060 6FEA0505 		mvn	r5, r5
 1140 0064 01D1     		bne	.L246
 1141 0066 064B     		ldr	r3, .L260+4
 1142 0068 04E0     		b	.L257
 1143              	.L246:
 1144 006a B4F5807F 		cmp	r4, #256
 1145 006e 0CBF     		ite	eq
 1146 0070 044B     		ldreq	r3, .L260+8
 1147 0072 054B     		ldrne	r3, .L260+12
 1148              	.L257:
 1149 0074 5A68     		ldr	r2, [r3, #4]
 1150 0076 1540     		ands	r5, r5, r2
 1151              	.L258:
 1152 0078 5D60     		str	r5, [r3, #4]
 1153 007a 70BD     		pop	{r4, r5, r6, pc}
 1154              	.L261:
 1155              		.align	2
 1156              	.L260:
 1157 007c 00000000 		.word	.LC0
 1158 0080 600000A0 		.word	-1610612640
 1159 0084 800000A0 		.word	-1610612608
 1160 0088 A00000A0 		.word	-1610612576
 1162              		.section	.text.FSMC_GetFlagStatus,"ax",%progbits
 1163              		.align	1
 1164              		.global	FSMC_GetFlagStatus
 1165              		.thumb
 1166              		.thumb_func
 1168              	FSMC_GetFlagStatus:
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171 0000 1028     		cmp	r0, #16
 1172 0002 38B5     		push	{r3, r4, r5, lr}
 1173 0004 0446     		mov	r4, r0
 1174 0006 0D46     		mov	r5, r1
 1175 0008 0AD0     		beq	.L263
 1176 000a B0F5807F 		cmp	r0, #256
 1177 000e 07D0     		beq	.L263
 1178 0010 B0F5805F 		cmp	r0, #4096
 1179 0014 04D0     		beq	.L263
 1180 0016 1048     		ldr	r0, .L284
 1181 0018 40F2BF21 		movw	r1, #703
 1182 001c FFF7FEFF 		bl	assert_err
 1183              	.L263:
 1184 0020 6B1E     		subs	r3, r5, #1
 1185 0022 012B     		cmp	r3, #1
 1186 0024 08D9     		bls	.L264
 1187 0026 042D     		cmp	r5, #4
 1188 0028 06D0     		beq	.L264
 1189 002a 402D     		cmp	r5, #64
 1190 002c 04D0     		beq	.L264
 1191 002e 0A48     		ldr	r0, .L284
 1192 0030 4FF43071 		mov	r1, #704
 1193 0034 FFF7FEFF 		bl	assert_err
 1194              	.L264:
 1195 0038 102C     		cmp	r4, #16
 1196 003a 01D1     		bne	.L265
 1197 003c 074B     		ldr	r3, .L284+4
 1198 003e 04E0     		b	.L283
 1199              	.L265:
 1200 0040 B4F5807F 		cmp	r4, #256
 1201 0044 0CBF     		ite	eq
 1202 0046 064B     		ldreq	r3, .L284+8
 1203 0048 064B     		ldrne	r3, .L284+12
 1204              	.L283:
 1205 004a 5B68     		ldr	r3, [r3, #4]
 1206 004c 2B42     		tst	r3, r5
 1207 004e 0CBF     		ite	eq
 1208 0050 0020     		moveq	r0, #0
 1209 0052 0120     		movne	r0, #1
 1210 0054 38BD     		pop	{r3, r4, r5, pc}
 1211              	.L285:
 1212 0056 00BF     		.align	2
 1213              	.L284:
 1214 0058 00000000 		.word	.LC0
 1215 005c 600000A0 		.word	-1610612640
 1216 0060 800000A0 		.word	-1610612608
 1217 0064 A00000A0 		.word	-1610612576
 1219              		.section	.text.FSMC_ClearFlag,"ax",%progbits
 1220              		.align	1
 1221              		.global	FSMC_ClearFlag
 1222              		.thumb
 1223              		.thumb_func
 1225              	FSMC_ClearFlag:
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228 0000 1028     		cmp	r0, #16
 1229 0002 38B5     		push	{r3, r4, r5, lr}
 1230 0004 0446     		mov	r4, r0
 1231 0006 0D46     		mov	r5, r1
 1232 0008 0AD0     		beq	.L287
 1233 000a B0F5807F 		cmp	r0, #256
 1234 000e 07D0     		beq	.L287
 1235 0010 B0F5805F 		cmp	r0, #4096
 1236 0014 04D0     		beq	.L287
 1237 0016 0E48     		ldr	r0, .L303
 1238 0018 40F2EE21 		movw	r1, #750
 1239 001c FFF7FEFF 		bl	assert_err
 1240              	.L287:
 1241 0020 35F00703 		bics	r3, r5, #7
 1242 0024 00D1     		bne	.L288
 1243 0026 25B9     		cbnz	r5, .L289
 1244              	.L288:
 1245 0028 0948     		ldr	r0, .L303
 1246 002a 40F2EF21 		movw	r1, #751
 1247 002e FFF7FEFF 		bl	assert_err
 1248              	.L289:
 1249 0032 102C     		cmp	r4, #16
 1250 0034 6FEA0505 		mvn	r5, r5
 1251 0038 01D1     		bne	.L290
 1252 003a 064B     		ldr	r3, .L303+4
 1253 003c 04E0     		b	.L302
 1254              	.L290:
 1255 003e B4F5807F 		cmp	r4, #256
 1256 0042 0CBF     		ite	eq
 1257 0044 044B     		ldreq	r3, .L303+8
 1258 0046 054B     		ldrne	r3, .L303+12
 1259              	.L302:
 1260 0048 5A68     		ldr	r2, [r3, #4]
 1261 004a 1540     		ands	r5, r5, r2
 1262 004c 5D60     		str	r5, [r3, #4]
 1263 004e 38BD     		pop	{r3, r4, r5, pc}
 1264              	.L304:
 1265              		.align	2
 1266              	.L303:
 1267 0050 00000000 		.word	.LC0
 1268 0054 600000A0 		.word	-1610612640
 1269 0058 800000A0 		.word	-1610612608
 1270 005c A00000A0 		.word	-1610612576
 1272              		.section	.text.FSMC_GetITStatus,"ax",%progbits
 1273              		.align	1
 1274              		.global	FSMC_GetITStatus
 1275              		.thumb
 1276              		.thumb_func
 1278              	FSMC_GetITStatus:
 1279              		@ args = 0, pretend = 0, frame = 0
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
 1281 0000 1028     		cmp	r0, #16
 1282 0002 38B5     		push	{r3, r4, r5, lr}
 1283 0004 0546     		mov	r5, r0
 1284 0006 0C46     		mov	r4, r1
 1285 0008 0AD0     		beq	.L306
 1286 000a B0F5807F 		cmp	r0, #256
 1287 000e 07D0     		beq	.L306
 1288 0010 B0F5805F 		cmp	r0, #4096
 1289 0014 04D0     		beq	.L306
 1290 0016 1148     		ldr	r0, .L332
 1291 0018 4FF44571 		mov	r1, #788
 1292 001c FFF7FEFF 		bl	assert_err
 1293              	.L306:
 1294 0020 082C     		cmp	r4, #8
 1295 0022 08D0     		beq	.L307
 1296 0024 102C     		cmp	r4, #16
 1297 0026 06D0     		beq	.L307
 1298 0028 202C     		cmp	r4, #32
 1299 002a 04D0     		beq	.L307
 1300 002c 0B48     		ldr	r0, .L332
 1301 002e 40F21531 		movw	r1, #789
 1302 0032 FFF7FEFF 		bl	assert_err
 1303              	.L307:
 1304 0036 102D     		cmp	r5, #16
 1305 0038 01D1     		bne	.L308
 1306 003a 094B     		ldr	r3, .L332+4
 1307 003c 04E0     		b	.L331
 1308              	.L308:
 1309 003e B5F5807F 		cmp	r5, #256
 1310 0042 0CBF     		ite	eq
 1311 0044 074B     		ldreq	r3, .L332+8
 1312 0046 084B     		ldrne	r3, .L332+12
 1313              	.L331:
 1314 0048 5B68     		ldr	r3, [r3, #4]
 1315 004a 13EA0400 		ands	r0, r3, r4
 1316 004e 04D0     		beq	.L311
 1317 0050 13EAD404 		ands	r4, r3, r4, lsr #3
 1318 0054 0CBF     		ite	eq
 1319 0056 0020     		moveq	r0, #0
 1320 0058 0120     		movne	r0, #1
 1321              	.L311:
 1322 005a 38BD     		pop	{r3, r4, r5, pc}
 1323              	.L333:
 1324              		.align	2
 1325              	.L332:
 1326 005c 00000000 		.word	.LC0
 1327 0060 600000A0 		.word	-1610612640
 1328 0064 800000A0 		.word	-1610612608
 1329 0068 A00000A0 		.word	-1610612576
 1331              		.section	.text.FSMC_ClearITPendingBit,"ax",%progbits
 1332              		.align	1
 1333              		.global	FSMC_ClearITPendingBit
 1334              		.thumb
 1335              		.thumb_func
 1337              	FSMC_ClearITPendingBit:
 1338              		@ args = 0, pretend = 0, frame = 0
 1339              		@ frame_needed = 0, uses_anonymous_args = 0
 1340 0000 1028     		cmp	r0, #16
 1341 0002 38B5     		push	{r3, r4, r5, lr}
 1342 0004 0446     		mov	r4, r0
 1343 0006 0D46     		mov	r5, r1
 1344 0008 0AD0     		beq	.L335
 1345 000a B0F5807F 		cmp	r0, #256
 1346 000e 07D0     		beq	.L335
 1347 0010 B0F5805F 		cmp	r0, #4096
 1348 0014 04D0     		beq	.L335
 1349 0016 0F48     		ldr	r0, .L351
 1350 0018 4FF45171 		mov	r1, #836
 1351 001c FFF7FEFF 		bl	assert_err
 1352              	.L335:
 1353 0020 35F03803 		bics	r3, r5, #56
 1354 0024 00D1     		bne	.L336
 1355 0026 25B9     		cbnz	r5, .L337
 1356              	.L336:
 1357 0028 0A48     		ldr	r0, .L351
 1358 002a 40F24531 		movw	r1, #837
 1359 002e FFF7FEFF 		bl	assert_err
 1360              	.L337:
 1361 0032 102C     		cmp	r4, #16
 1362 0034 4FEAD505 		lsr	r5, r5, #3
 1363 0038 01D1     		bne	.L338
 1364 003a 074B     		ldr	r3, .L351+4
 1365 003c 04E0     		b	.L350
 1366              	.L338:
 1367 003e B4F5807F 		cmp	r4, #256
 1368 0042 0CBF     		ite	eq
 1369 0044 054B     		ldreq	r3, .L351+8
 1370 0046 064B     		ldrne	r3, .L351+12
 1371              	.L350:
 1372 0048 5A68     		ldr	r2, [r3, #4]
 1373 004a 22EA0505 		bic	r5, r2, r5
 1374 004e 5D60     		str	r5, [r3, #4]
 1375 0050 38BD     		pop	{r3, r4, r5, pc}
 1376              	.L352:
 1377 0052 00BF     		.align	2
 1378              	.L351:
 1379 0054 00000000 		.word	.LC0
 1380 0058 600000A0 		.word	-1610612640
 1381 005c 800000A0 		.word	-1610612608
 1382 0060 A00000A0 		.word	-1610612576
 1384              		.section	.rodata.str1.1,"aMS",%progbits,1
 1385              	.LC0:
 1386 0000 443A2F55 		.ascii	"D:/Users/draapho/Desktop/stm32_ezos_v231/drivers/li"
 1386      73657273 
 1386      2F647261 
 1386      6170686F 
 1386      2F446573 
 1387 0033 62726172 		.ascii	"braries/STM32F10x_StdPeriph_Driver/src/stm32f10x_fs"
 1387      6965732F 
 1387      53544D33 
 1387      32463130 
 1387      785F5374 
 1388 0066 6D632E63 		.ascii	"mc.c\000"
 1388      00
 1389              		.ident	"GCC: (Sourcery CodeBench Lite 2013.11-24) 4.8.1"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_fsmc.c
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:16     .text.FSMC_NORSRAMDeInit:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:21     .text.FSMC_NORSRAMDeInit:00000000 FSMC_NORSRAMDeInit
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:56     .text.FSMC_NORSRAMDeInit:0000004c $d
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:59     .text.FSMC_NANDDeInit:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:64     .text.FSMC_NANDDeInit:00000000 FSMC_NANDDeInit
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:92     .text.FSMC_NANDDeInit:0000002c $d
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:97     .text.FSMC_PCCARDDeInit:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:102    .text.FSMC_PCCARDDeInit:00000000 FSMC_PCCARDDeInit
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:119    .text.FSMC_PCCARDDeInit:00000018 $d
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:122    .text.FSMC_NORSRAMInit:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:127    .text.FSMC_NORSRAMInit:00000000 FSMC_NORSRAMInit
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:407    .text.FSMC_NORSRAMInit:00000278 $d
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:411    .text.FSMC_NANDInit:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:416    .text.FSMC_NANDInit:00000000 FSMC_NANDInit
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:581    .text.FSMC_NANDInit:0000017c $d
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:586    .text.FSMC_PCCARDInit:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:591    .text.FSMC_PCCARDInit:00000000 FSMC_PCCARDInit
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:755    .text.FSMC_PCCARDInit:00000170 $d
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:759    .text.FSMC_NORSRAMStructInit:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:764    .text.FSMC_NORSRAMStructInit:00000000 FSMC_NORSRAMStructInit
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:806    .text.FSMC_NANDStructInit:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:811    .text.FSMC_NANDStructInit:00000000 FSMC_NANDStructInit
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:838    .text.FSMC_PCCARDStructInit:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:843    .text.FSMC_PCCARDStructInit:00000000 FSMC_PCCARDStructInit
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:870    .text.FSMC_NORSRAMCmd:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:875    .text.FSMC_NORSRAMCmd:00000000 FSMC_NORSRAMCmd
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:912    .text.FSMC_NORSRAMCmd:00000048 $d
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:916    .text.FSMC_NANDCmd:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:921    .text.FSMC_NANDCmd:00000000 FSMC_NANDCmd
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:965    .text.FSMC_NANDCmd:00000050 $d
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:971    .text.FSMC_PCCARDCmd:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:976    .text.FSMC_PCCARDCmd:00000000 FSMC_PCCARDCmd
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1003   .text.FSMC_PCCARDCmd:00000028 $d
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1008   .text.FSMC_NANDECCCmd:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1013   .text.FSMC_NANDECCCmd:00000000 FSMC_NANDECCCmd
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1057   .text.FSMC_NANDECCCmd:00000050 $d
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1063   .text.FSMC_GetECC:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1068   .text.FSMC_GetECC:00000000 FSMC_GetECC
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1081   .text.FSMC_GetECC:0000000c $d
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1085   .text.FSMC_ITConfig:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1090   .text.FSMC_ITConfig:00000000 FSMC_ITConfig
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1157   .text.FSMC_ITConfig:0000007c $d
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1163   .text.FSMC_GetFlagStatus:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1168   .text.FSMC_GetFlagStatus:00000000 FSMC_GetFlagStatus
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1214   .text.FSMC_GetFlagStatus:00000058 $d
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1220   .text.FSMC_ClearFlag:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1225   .text.FSMC_ClearFlag:00000000 FSMC_ClearFlag
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1267   .text.FSMC_ClearFlag:00000050 $d
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1273   .text.FSMC_GetITStatus:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1278   .text.FSMC_GetITStatus:00000000 FSMC_GetITStatus
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1326   .text.FSMC_GetITStatus:0000005c $d
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1332   .text.FSMC_ClearITPendingBit:00000000 $t
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1337   .text.FSMC_ClearITPendingBit:00000000 FSMC_ClearITPendingBit
D:\Users\draapho\AppData\Local\Temp\ccJPPssz.s:1379   .text.FSMC_ClearITPendingBit:00000054 $d

UNDEFINED SYMBOLS
assert_err
